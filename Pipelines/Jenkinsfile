@Library('gx-library')

import com.genexus.FileHelper

pipeline {
    agent { node { label 'kbbuilder-node-6' } }
    /*
    environment {
        String gitUrl = 'https://github.com/genexuslabs/KBBuilder-GeneXusServer.git'
        String gitBranch = 'production' 
        String gitCredentialsId = 'genexuslabs_github' 
        String propertiesFilePath = 'gxserveroperatorsaas-app/build.properties'
        String machineFilePath = 'gxserveroperatorsaas-app/buildernode.properties'
    }
    */
    stages {
        stage('Setup parameters') {
            steps {
                script { 
                    properties([
                        parameters([
                            booleanParam(defaultValue: false, description: 'Force rebuild', name: 'forceRebuild'),
                            booleanParam(defaultValue: false, description: 'Force update GeneXus Installation', name: 'forceUpdateGX')
                        ]),
                        disableConcurrentBuilds(),
                        buildDiscarder(logRotator(numToKeepStr: '10'))
                    ])
                }
            }
        }
        stege('Read proJect properties') {
            steps {
                script { 
                    echo "algo"
                }
            }
            /*
            git url: gitUrl, 
                branch: gitBranch, 
                credentialsId: gitCredentialsId, 
                changelog: false, 
                poll: false
            /*
            fileHelper = new FileHelper()
            agentLabels = fileHelper.checkForJobLabels(agentLabels)

            buildProperties = readProperties file: propertiesFilePath;
            machineProperties = readProperties file: machineFilePath;

            String msbuildExePath  = fileHelper.joinPath(machineProperties.msbuildInstallationPath, "msbuild.exe")
            echo "INFO MSBuild:: ${msbuildExePath}"
            String localGXPath = fileHelper.getAbsolutePathFromWS('\\..\\genexus')
            echo "INFO GeneXus Installation:: ${localGXPath}"
            String localAndroidSDKPath = false
            if(buildProperties.genexusNeedAndroidSDK) {
                localAndroidSDKPath = getAbsolutePathFromWS('\\..\\AndroidSDK')
            }
            String localKBPath = getAbsolutePathFromWS('\\..\\kb\\' + buildProperties.gxserverKB)
            */
        }
        /*
        stage('Configure GeneXus Installation') {
            steps {
                jobHandleGeneXusInstallation params.forceUpdateGX
            }
        }
        stage('Checkout/Update KnowledgeBase') {
            steps {
                jobUpdateKnowledgeBase params.forceUpdateGX
            }
        }
        stage('Process Reorganization') {
            steps {
                    /*
                    configurar data store de storage
                    check pending reorg
                    impactar reorganizacion
                    exportar reorganizacion
                    
                jobProcessReorganization params.forceUpdateGX
            }
        }
        /*
        stage('Build KnowledgeBase') {
            steps {
                jobHandleGeneXusInstallation "Calling handle gx instalaltion"
            }
        }
        stage('Execute Unit Tests') {
            steps {
                jobHandleGeneXusInstallation "Calling handle gx instalaltion"
            }
        }
        */
    }
}